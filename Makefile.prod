.PHONY: help deploy build-prod up-prod down-prod logs-prod clean-prod migrate-prod backup restore

help: ## Show this help message
	@echo "Production Commands:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

deploy: build-prod up-prod ## Deploy to production (build and start)
	@echo "üöÄ Production deployment completed!"

build-prod: ## Build production images
	@echo "üî® Building production images..."
	docker-compose -f docker-compose.prod.yml build --no-cache

up-prod: ## Start production services
	@echo "üöÄ Starting production services..."
	docker-compose -f docker-compose.prod.yml up -d

down-prod: ## Stop production services
	@echo "‚èπÔ∏è  Stopping production services..."
	docker-compose -f docker-compose.prod.yml down

logs-prod: ## Show production logs
	docker-compose -f docker-compose.prod.yml logs -f

logs-app-prod: ## Show production app logs
	docker-compose -f docker-compose.prod.yml logs -f app

logs-db-prod: ## Show production database logs
	docker-compose -f docker-compose.prod.yml logs -f postgres

clean-prod: ## Remove production containers and volumes
	@echo "üßπ Cleaning production environment..."
	docker-compose -f docker-compose.prod.yml down -v --remove-orphans
	docker system prune -f

migrate-prod: ## Run production database migrations
	@echo "üîÑ Running production migrations..."
	docker-compose -f docker-compose.prod.yml exec app npx prisma migrate deploy

backup: ## Create database backup
	@echo "üíæ Creating database backup..."
	@mkdir -p backups
	docker-compose -f docker-compose.prod.yml exec postgres pg_dump -U postgres mane_haghighi_db > backups/backup_$(shell date +%Y%m%d_%H%M%S).sql

restore: ## Restore database from backup (usage: make restore BACKUP_FILE=backups/backup_20240101_120000.sql)
	@if [ -z "$(BACKUP_FILE)" ]; then \
		echo "‚ùå Please specify backup file: make restore BACKUP_FILE=backups/backup_20240101_120000.sql"; \
		exit 1; \
	fi
	@echo "üîÑ Restoring database from $(BACKUP_FILE)..."
	docker-compose -f docker-compose.prod.yml exec -T postgres psql -U postgres -d mane_haghighi_db < $(BACKUP_FILE)

monitor: ## Monitor production services
	@echo "üìä Production Services Status:"
	docker-compose -f docker-compose.prod.yml ps
	@echo "\nüìà Resource Usage:"
	docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}"

ssl-setup: ## Setup SSL certificates (requires certbot)
	@echo "üîí Setting up SSL certificates..."
	@echo "Make sure you have certbot installed and configured"
	@echo "Then run: sudo certbot certonly --standalone -d your-domain.com"
	@echo "Copy certificates to nginx/ssl/ directory"

update: ## Update production application
	@echo "üîÑ Updating production application..."
	git pull origin main
	make build-prod
	make migrate-prod
	docker-compose -f docker-compose.prod.yml restart app
