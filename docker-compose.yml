services:
  postgres:
    image: postgres:15-alpine
    container_name: mane_haghighi_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mane_haghighi_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-mane_haghighi_db}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - app_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mane_haghighi_app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/${POSTGRES_DB:-mane_haghighi_db}
      PORT: ${APP_PORT:-3000}
      JWT_SECRET: "${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    command: sh -c "npm run build && npx prisma migrate deploy && npm run db:push && npm start"

  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mane_haghighi_prisma_studio
    restart: unless-stopped
    ports:
      - "${PRISMA_STUDIO_PORT:-5555}:5555"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/${POSTGRES_DB:-mane_haghighi_db}
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    command: sh -c "npx prisma generate && npx prisma studio --hostname 0.0.0.0 --port 5555"

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
